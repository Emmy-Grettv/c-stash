import React from 'react';
import { View, Text, Image, StyleSheet } from 'react-native';
import Svg, { Path } from "react-native-svg";

interface ReviewCardProps {
    userName: string;
    time: string;
    rating: number;
    review: string;
    profileImage: any; // For require() result or Image source
}

const ReviewCard: React.FC<ReviewCardProps> = ({
    userName,
    time,
    rating,
    review,
    profileImage
}) => {
    return (
        <View style={styles.card}>
            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', marginBottom: 10 }}>
                <View style={styles.header}>
                <Image source={profileImage} style={styles.profileImage} />
                <View>
                    <View style={{ flexDirection: 'row', alignItems: 'center', gap: 4 }}>
                        <Text style={styles.userName}>{userName}</Text>
                        <Svg width="19" height="19" viewBox="0 0 19 19" fill="none">
                            <Path d="M8.71231 10.5724L7.36531 9.22995C7.29531 9.15995 7.21006 9.12245 7.10956 9.11745C7.00856 9.11245 6.91681 9.15145 6.83431 9.23445C6.75431 9.31445 6.71431 9.40295 6.71431 9.49995C6.71431 9.59695 6.75431 9.68545 6.83431 9.76545L8.28781 11.2189C8.40931 11.3399 8.55081 11.4004 8.71231 11.4004C8.87381 11.4004 9.01531 11.3399 9.13681 11.2189L12.1653 8.19045C12.2383 8.11745 12.2766 8.03145 12.2801 7.93245C12.2836 7.83295 12.2453 7.74195 12.1653 7.65945C12.0828 7.57695 11.9936 7.53495 11.8976 7.53345C11.8016 7.53195 11.7126 7.57245 11.6306 7.65495L8.71231 10.5724ZM7.00231 15.962L6.01531 14.3119L4.15456 13.919C4.00556 13.8914 3.88681 13.8115 3.79831 13.679C3.70981 13.547 3.67331 13.4065 3.68881 13.2575L3.86656 11.3405L2.60431 9.90045C2.49831 9.79195 2.44531 9.65845 2.44531 9.49995C2.44531 9.34145 2.49831 9.20795 2.60431 9.09945L3.86656 7.65945L3.68881 5.7432C3.67381 5.5937 3.71031 5.45295 3.79831 5.32095C3.88681 5.18895 4.00556 5.10895 4.15456 5.08095L6.01456 4.6887L7.00156 3.0387C7.08256 2.9047 7.19131 2.8122 7.32781 2.7612C7.46431 2.7097 7.60556 2.71645 7.75156 2.78145L9.49981 3.5202L11.2473 2.78145C11.3938 2.71645 11.5353 2.7097 11.6718 2.7612C11.8083 2.8122 11.9171 2.9047 11.9981 3.0387L12.9843 4.6887L14.8451 5.08095C14.9941 5.10895 15.1128 5.18895 15.2013 5.32095C15.2898 5.45295 15.3263 5.5937 15.3108 5.7432L15.1338 7.65945L16.3953 9.09945C16.5013 9.20795 16.5543 9.34145 16.5543 9.49995C16.5543 9.65845 16.5013 9.7922 16.3953 9.9012L15.1338 11.3405L15.3108 13.2567C15.3258 13.4062 15.2893 13.547 15.2013 13.679C15.1128 13.8115 14.9941 13.8914 14.8451 13.919L12.9851 14.3119L11.9981 15.962C11.9171 16.0954 11.8083 16.188 11.6718 16.2395C11.5353 16.291 11.3941 16.284 11.2481 16.2185L9.49981 15.4797L7.75231 16.2185C7.60581 16.2835 7.46431 16.2902 7.32781 16.2387C7.19131 16.1877 7.08256 16.0952 7.00156 15.9612" fill="#FF650E" />
                        </Svg>
                    </View>
                    <Text style={styles.time}>{time}</Text>
                </View>
            </View>
            <View style={{ flexDirection: 'row', alignItems: 'center', gap: 10 }}>
                <Text style={styles.rating}>‚≠ê {rating} </Text>
                <Svg width="21" height="21" viewBox="0 0 21 21" fill="none">
                    <Path d="M10.5008 8.30005C10.2118 8.30005 9.92556 8.35698 9.65852 8.46759C9.39148 8.5782 9.14884 8.74033 8.94446 8.94471C8.74008 9.14909 8.57796 9.39172 8.46735 9.65876C8.35674 9.9258 8.2998 10.212 8.2998 10.501C8.2998 10.7901 8.35674 11.0763 8.46735 11.3433C8.57796 11.6104 8.74008 11.853 8.94446 12.0574C9.14884 12.2618 9.39148 12.4239 9.65852 12.5345C9.92556 12.6451 10.2118 12.702 10.5008 12.702C11.0845 12.7019 11.6443 12.4699 12.057 12.057C12.4697 11.6442 12.7014 11.0843 12.7013 10.5005C12.7012 9.91681 12.4692 9.35703 12.0563 8.94435C11.6434 8.53168 11.0835 8.29992 10.4998 8.30005H10.5008ZM10.5008 5.70005C10.7897 5.69992 11.0758 5.64288 11.3426 5.5322C11.6095 5.42152 11.852 5.25936 12.0561 5.05498C12.2603 4.8506 12.4223 4.608 12.5327 4.34103C12.6432 4.07406 12.6999 3.78796 12.6998 3.49905C12.6997 3.21014 12.6426 2.92409 12.532 2.65722C12.4213 2.39036 12.2591 2.1479 12.0547 1.94371C11.8504 1.73951 11.6078 1.57757 11.3408 1.46713C11.0738 1.35669 10.7877 1.29992 10.4988 1.30005C9.91533 1.30031 9.35586 1.53235 8.94346 1.94512C8.53107 2.35789 8.29954 2.91757 8.2998 3.50105C8.30007 4.08453 8.53211 4.644 8.94488 5.05639C9.35764 5.46878 9.91733 5.70031 10.5008 5.70005ZM10.5008 15.3C9.91706 15.3 9.35723 15.5319 8.94446 15.9447C8.5317 16.3575 8.2998 16.9173 8.2998 17.501C8.2998 18.0848 8.5317 18.6446 8.94446 19.0574C9.35723 19.4702 9.91706 19.702 10.5008 19.702C11.0845 19.702 11.6444 19.4702 12.0571 19.0574C12.4699 18.6446 12.7018 18.0848 12.7018 17.501C12.7018 16.9173 12.4699 16.3575 12.0571 15.9447C11.6444 15.5319 11.0845 15.3 10.5008 15.3Z" fill="#1D1E20" />
                </Svg>
            </View>

            </View>
            <Text style={styles.review}>{review}</Text>
        </View>
    );
};

const styles = StyleSheet.create({
    card: {
        backgroundColor: '#fff',
        padding: 20,
        marginBottom: 20,
        borderRadius: 15,
        borderWidth: 1,
        borderColor: '#3030304D'
    },
    header: {
        flexDirection: 'row',
        alignItems: 'center',
        marginBottom: 5,
    },
    profileImage: {
        width: 30,
        height: 30,
        borderRadius: 15,
        marginRight: 10,
    },
    userName: {
        fontWeight: 'bold',
        fontSize: 16
    },
    time: {
        color: '#666',
        fontSize: 14,
    },
    rating: {
        fontSize: 16,
        fontWeight: 'bold',
        marginBottom: 5,
    },
    review: {
        fontSize: 16,
        color: '#8F959E',
    },
});

export default ReviewCard;